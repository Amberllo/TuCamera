apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
//    compile project(':TuSDK')

    compile project(':TuSDKUIDefault')
    compile project(':TuSDKUIGeeV2')
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
}

android {

    compileSdkVersion 23
    buildToolsVersion '23.0.1'
    defaultConfig {
        applicationId 'com.mixcolours.photoshare'
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 5
        versionName "1.5"
        multiDexEnabled true
    }
    signingConfigs {
        debug {
            storeFile file('./keystore/debug.keystore')
        }
//        releaseConfig {
//            keyAlias 'txmk_sign.keystore'
//            keyPassword 'Skincloser88'
//            storeFile file('./keystore/txmk_sign.keystore')
//            storePassword 'Skincloser88'
//        }
        releaseConfig {
            keyAlias 'android'
            keyPassword 'xw123456'
            storeFile file('./keystore/android.keystore')
            storePassword 'xw123456'
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled false
            signingConfig signingConfigs.releaseConfig

        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

